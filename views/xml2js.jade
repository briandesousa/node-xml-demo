extends layout

block content
  h1 #[span(class="code") xml2js] and #[span(class="code") express-xml-bodyparser]
  p The #[a(href="https://www.npmjs.com/package/xml2js", target="_blank") #[span(class="code") xml2js]] package is a
    popular solution for reading and writing XML in Node.js. It is used by the 
    #[a(href="https://www.npmjs.com/package/express-xml-bodyparser", target="_blank") #[span(class="code") express-xml-bodyparser]] 
    package to parse incoming XML requests.

  p Use the button below to send an HTTP POST request with an XML body to an endpoint hosted on the backend Express
    server. The backend is using #[span(class="code") express-xml-bodyparser] and #[span(class="code") xmljs] to parse
    the request and return an XML response.

  div(class="margin-bottom")
    button(id="sendXmlButton") Send XML Request

  div
    p Response:
    textarea(id="xmlResponseOutput", cols="100", rows="2", readonly)
  
  p(style="margin-top: 2em; font-style: italic") Try the #[a(href="/xml2js/xml-tester") xml tester] to send custom XML requests.

  script.
    document.getElementById('sendXmlButton').addEventListener('click', () => {
      var responseOutput = document.getElementById('xmlResponseOutput');

      fetch('/xml2js/customer', {
        method: 'POST',
        headers: {
          'Content-Type': 'text/xml'
        },
        body: '<retrieveCustomer><id>39399444</id></retrieveCustomer>'
      })
      .then(response => response.text())
      .then(responseText => responseOutput.value = responseText)
      .catch(error => responseOutput.value = `Error sending fetch request: ${error}`);
    });
